# VULNERABILIDADE: Secret com dados em base64 versionado no Git
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: vulnerable-namespace
type: Opaque
data:
  # VULNERABILIDADE: Secrets commitados no repositorio Git
  # VULNERABILIDADE: Base64 nao e criptografia apenas encoding
  
  # Base64 de: admin
  username: YWRtaW4=
  
  # Base64 de: password123
  password: cGFzc3dvcmQxMjM=
  
  # Base64 de: sk-proj-1234567890abcdefghijklmnopqrstuvwxyz
  api-key: c2stcHJvai0xMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo=
  
  # Base64 de: AKIAIOSFODNN7EXAMPLE
  aws-access-key: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=
  
  # Base64 de: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  aws-secret-key: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==
  
  # Base64 de: ghp_1234567890abcdefghijklmnopqrstuvwxyz
  github-token: Z2hwXzEyMzQ1Njc4OTBhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eg==
  
  # Base64 de: postgresql://admin:supersecret@db.example.com:5432/mydb
  database-url: cG9zdGdyZXNxbDovL2FkbWluOnN1cGVyc2VjcmV0QGRiLmV4YW1wbGUuY29tOjU0MzIvbXlkYg==
  
  # Base64 de: my-jwt-secret-key-12345
  jwt-secret: bXktand0LXNlY3JldC1rZXktMTIzNDU=

---
# VULNERABILIDADE: Secret do tipo BasicAuth com credenciais fracas
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth-secret
  namespace: vulnerable-namespace
type: kubernetes.io/basic-auth
stringData:
  # VULNERABILIDADE: Usando stringData que fica legivel
  username: admin
  password: admin123

---
# VULNERABILIDADE: Secret SSH com chave privada
apiVersion: v1
kind: Secret
metadata:
  name: ssh-key-secret
  namespace: vulnerable-namespace
type: kubernetes.io/ssh-auth
stringData:
  # VULNERABILIDADE: Chave SSH privada commitada no Git
  ssh-privatekey: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEA1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMN
    OPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQR
    STUVWXYZ1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUV
    WXYZ1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
    -----END RSA PRIVATE KEY-----

---
# VULNERABILIDADE: Docker registry credentials
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: vulnerable-namespace
type: kubernetes.io/dockerconfigjson
stringData:
  # VULNERABILIDADE: Docker credentials em plaintext
  .dockerconfigjson: |
    {
      "auths": {
        "https://index.docker.io/v1/": {
          "username": "myuser",
          "password": "MyDockerPassword123",
          "email": "user@example.com",
          "auth": "bXl1c2VyOk15RG9ja2VyUGFzc3dvcmQxMjM="
        }
      }
    }

---
# VULNERABILIDADE: TLS secret com certificado e chave privada
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: vulnerable-namespace
type: kubernetes.io/tls
stringData:
  # VULNERABILIDADE: Certificado TLS privado commitado
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDXTCCAkWgAwIBAgIJAKL0UG+mRmQjMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
    BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX
    -----END CERTIFICATE-----
  
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDU1234567890ab
    cdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890abcdef
    -----END PRIVATE KEY-----
